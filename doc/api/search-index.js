var N=null,E="",T="t",U="u",searchIndex={};
var R=["tinymt32","This function outputs floating point number from internal…","This function outputs 32-bit unsigned integer from…","tinymt","This function initializes the internal state array with a…","tinymt64","This function initializes the internal state array, with…","This function outputs 64-bit unsigned integer from…","result","try_from","try_into","borrow_mut","type_id","to_owned","clone_into","formatter","next_u32","next_u64","fill_bytes","try_fill_bytes","from_seed","TinyMT64Seed","TinyMT32Seed","TinyMT32","TinyMT64"];

searchIndex["tinymt"]={"doc":E,"i":[[3,R[21],R[3],E,N,N],[12,"0",E,E,0,N],[3,R[24],E,"random TinyMT state vector",N,N],[3,R[22],E,E,N,N],[12,"0",E,E,1,N],[3,R[23],E,"tinymt32 internal state vector and parameters",N,N],[0,R[0],E,E,N,N],[5,"tinymt32_init","tinymt::tinymt32",R[4],N,[[[R[0]],["u32"]]]],[5,"tinymt32_init_by_array",E,R[6],N,[[[R[0]]]]],[5,"tinymt32_get_mexp",E,"This function always returns 127 @return always 127",N,[[[R[0]]],["usize"]]],[5,"tinymt32_next_state",E,"This function changes internal state of tinymt32. Users…",N,[[[R[0]]]]],[5,"tinymt32_temper",E,R[2],N,[[[R[0]]],["u32"]]],[5,"tinymt32_temper_conv",E,R[1],N,[[[R[0]]],["f32"]]],[5,"tinymt32_temper_conv_open",E,R[1],N,[[[R[0]]],["f32"]]],[5,"tinymt32_generate_uint32",E,R[2],N,[[[R[0]]],["u32"]]],[5,"tinymt32_generate_float",E,R[1],N,[[[R[0]]],["f32"]]],[5,"tinymt32_generate_float12",E,R[1],N,[[[R[0]]],["f32"]]],[5,"tinymt32_generate_float01",E,R[1],N,[[[R[0]]],["f32"]]],[5,"tinymt32_generate_float_oc",E,R[1],N,[[[R[0]]],["f32"]]],[5,"tinymt32_generate_float_oo",E,R[1],N,[[[R[0]]],["f32"]]],[5,"tinymt32_generate_32double",E,"This function outputs double precision floating point…",N,[[[R[0]]],["f64"]]],[11,"new",R[3],E,2,[[["u32"]],[R[0]]]],[0,R[5],E,E,N,N],[5,"tinymt64_init","tinymt::tinymt64",R[4],N,[[[R[5]],["u64"]]]],[5,"tinymt64_init_by_array",E,R[6],N,[[[R[5]]]]],[5,"tinymt64_get_mexp",E,"This function always returns 127.",N,[[[R[5]]],["usize"]]],[5,"tinymt64_next_state",E,"This function changes internal state of tinymt64. Users…",N,[[[R[5]]]]],[5,"tinymt64_temper",E,R[7],N,[[[R[5]]],["u64"]]],[5,"tinymt64_temper_conv",E,R[1],N,[[[R[5]]],["f64"]]],[5,"tinymt64_temper_conv_open",E,R[1],N,[[[R[5]]],["f64"]]],[5,"tinymt64_generate_uint64",E,R[7],N,[[[R[5]]],["u64"]]],[5,"tinymt64_generate_double",E,R[1],N,[[[R[5]]],["f64"]]],[5,"tinymt64_generate_double01",E,R[1],N,[[[R[5]]],["f64"]]],[5,"tinymt64_generate_double12",E,R[1],N,[[[R[5]]],["f64"]]],[5,"tinymt64_generate_double_oc",E,R[1],N,[[[R[5]]],["f64"]]],[5,"tinymt64_generate_double_oo",E,R[1],N,[[[R[5]]],["f64"]]],[11,"new",R[3],E,3,[[["u32"],["u64"]],[R[5]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[[U]],[R[8]]]],[11,R[10],E,E,0,[[],[R[8]]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],["typeid"]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"],[T]]]],[11,R[9],E,E,3,[[[U]],[R[8]]]],[11,R[10],E,E,3,[[],[R[8]]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],["typeid"]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[[U]],[R[8]]]],[11,R[10],E,E,1,[[],[R[8]]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],["typeid"]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"],[T]]]],[11,R[9],E,E,2,[[[U]],[R[8]]]],[11,R[10],E,E,2,[[],[R[8]]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],["typeid"]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"as_mut",E,E,0,[[["self"]]]],[11,"as_mut",E,E,1,[[["self"]]]],[11,"from",E,E,0,[[["u64"]],["self"]]],[11,"from",E,E,1,[[["u32"]],["self"]]],[11,"clone",E,E,3,[[["self"]],[R[5]]]],[11,"clone",E,E,2,[[["self"]],[R[0]]]],[11,"default",E,E,0,[[],["tinymt64seed"]]],[11,"default",E,E,1,[[],["tinymt32seed"]]],[11,"eq",E,E,3,[[[R[5]],["self"]],["bool"]]],[11,"ne",E,E,3,[[[R[5]],["self"]],["bool"]]],[11,"eq",E,E,2,[[[R[0]],["self"]],["bool"]]],[11,"ne",E,E,2,[[[R[0]],["self"]],["bool"]]],[11,"fmt",E,E,3,[[["self"],[R[15]]],[R[8]]]],[11,"fmt",E,E,2,[[["self"],[R[15]]],[R[8]]]],[11,R[16],E,E,3,[[["self"]],["u32"]]],[11,R[17],E,E,3,[[["self"]],["u64"]]],[11,R[18],E,E,3,[[["self"]]]],[11,R[19],E,E,3,[[["self"]],[[R[8],["error"]],["error"]]]],[11,R[16],E,E,2,[[["self"]],["u32"]]],[11,R[17],E,E,2,[[["self"]],["u64"]]],[11,R[18],E,E,2,[[["self"]]]],[11,R[19],E,E,2,[[["self"]],[[R[8],["error"]],["error"]]]],[11,R[20],E,E,3,[[],["self"]]],[11,R[20],E,E,2,[[],["self"]]]],"p":[[3,R[21]],[3,R[22]],[3,R[23]],[3,R[24]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);